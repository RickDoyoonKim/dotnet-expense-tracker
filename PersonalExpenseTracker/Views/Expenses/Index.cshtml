@model IEnumerable<PersonalExpenseTracker.Models.Expense>

@{
    ViewData["Title"] = "Expenses";
    var totalExpense = Model.Sum(e => e.Amount);
    var monthlyExpense = Model.Where(e => e.SpentAt.Month == DateTime.Now.Month && e.SpentAt.Year == DateTime.Now.Year)
                            .Sum(e => e.Amount);
    var todayExpense = Model.Where(e => e.SpentAt.Date == DateTime.Now.Date)
                          .Sum(e => e.Amount);
    
    // Expense data by category
    var categoryData = Model
        .GroupBy(e => e.Category)
        .Select(g => new { Category = g.Key, Amount = g.Sum(e => e.Amount) })
        .OrderByDescending(x => x.Amount)
        .ToList();

    // Monthly expense data
    var monthlyData = Model
        .GroupBy(e => new { e.SpentAt.Year, e.SpentAt.Month })
        .Select(g => new { 
            Date = new DateTime(g.Key.Year, g.Key.Month, 1).ToString("yyyy-MM"),
            Amount = g.Sum(e => e.Amount)
        })
        .OrderBy(x => x.Date)
        .ToList();
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Expense</h5>
                    <h3 class="card-text">$@totalExpense.ToString("N0")</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Monthly Expense</h5>
                    <h3 class="card-text">$@monthlyExpense.ToString("N0")</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Today's Expense</h5>
                    <h3 class="card-text">$@todayExpense.ToString("N0")</h3>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Expenses by Category</h5>
                    <canvas id="categoryChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Monthly Expense Trend</h5>
                    <canvas id="monthlyChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> New Expense
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            No expenses found. Add a new expense to get started!
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.SpentAt)</th>
                        <th>@Html.DisplayNameFor(model => model.Category)</th>
                        <th>@Html.DisplayNameFor(model => model.Amount)</th>
                        <th>@Html.DisplayNameFor(model => model.Description)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.SpentAt.ToString("yyyy-MM-dd")</td>
                            <td>@item.Category</td>
                            <td>$@item.Amount.ToString("N2")</td>
                            <td>@item.Description</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="confirmDelete('@item.Id')">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<form id="deleteForm" asp-action="Delete" method="post">
    <input type="hidden" id="expenseId" name="id" value="" />
</form>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this expense?')) {
                document.getElementById('expenseId').value = id;
                document.getElementById('deleteForm').submit();
            }
        }

        // Pie chart for expenses by category
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        new Chart(categoryCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(categoryData.Select(x => x.Category))),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(categoryData.Select(x => x.Amount))),
                    backgroundColor: [
                        '#FF6384',
                        '#36A2EB',
                        '#FFCE56',
                        '#4BC0C0',
                        '#9966FF',
                        '#FF9F40',
                        '#8AC24A',
                        '#FF5252'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'right'
                    }
                }
            }
        });

        // Line chart for monthly expense trend
        const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
        new Chart(monthlyCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(monthlyData.Select(x => x.Date))),
                datasets: [{
                    label: 'Monthly Expense',
                    data: @Html.Raw(Json.Serialize(monthlyData.Select(x => x.Amount))),
                    borderColor: '#36A2EB',
                    tension: 0.1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}